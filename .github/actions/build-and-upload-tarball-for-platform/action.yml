name: "Build and upload decomp tool binaries for the specifed platform"
description: "Builds and uploads a tarball with decomp tools for specified platform"

inputs:
    platform:
      required: true
      type: string
    install_llvm_build_deps_hook:
      required: true
      type: string
runs:
  using: "composite"
  steps:
    - name: Cache llvm tools
      uses: actions/cache@v4
      with:
        path: |
          download/cfe-3.9.1.src/build/bin/clang-3.9
          download/lld-3.9.1.src/build/tools/lld/lld
        key: ${{ inputs.platform }}_llvm-tools
    - name: Install llvm tools build dependencies if needed
      run: |
          if [ ! -f "download/cfe-3.9.1.src/build/bin/clang-3.9" ] || [ ! -f "download/lld-3.9.1.src/build/tools/lld/lld" ]; then
            eval "${{ inputs.install_llvm_build_deps_hook }}"
          fi
      shell: bash
    - name: Set up rust toolchain and caching
      uses: actions-rust-lang/setup-rust-toolchain@v1.15.0
      with:
        cache: true
        cache-workspaces: nx-decomp-tools/viking
    - name: Generate prebuilt archives
      run: |
        # Add this to path from macos, needs to be done here so that it doesn't get reset between steps
        export "PATH=$HOME/.pyenv/versions/2.7.18/bin:$PATH"
        ./generate.sh
      shell: bash
    - uses: actions/upload-artifact@v4
      with:
        name: LCUDecomp-binaries_${{ inputs.platform }}
        path: build/LCUDecomp-binaries_${{ inputs.platform }}.tar.xz
    - uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ github.ref_name }}
        files: |
          build/LCUDecomp-binaries_${{ inputs.platform }}.tar.xz
        preserve_order: true
        fail_on_unmatched_files: true
